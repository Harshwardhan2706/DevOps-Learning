Cat ====>>
__________________________________________________________________________________________________
	Different usages---->
	1. create file
	2. concatnate files
	3. copy the content of one file into other one.
	4. tac to see the content in revers order.

	cat > filename (to create new file)
	write file content here
	----------------------- ctrl+d (to save the file)

	cat >> filename (to add the more content in existing file)
	----------------------- ctrl+d 

	cat filename (to see the content inside the file)

	cat file1 file2 > all (to merge (concatnate) file1 file2 	content in new file "all")

	cat file1 >file2 to copy the data from file1 to file2
________________________________________________________________________________________________________
--------------------------------------------------------------------------------------------------------

touch =====>>
__________________________________________________________________________________________________
	Different usages------>
	1. create an empty file
	2. create multiple file
	3. change all timestamp of file
	4. update only acess time of file, modify time of file.

	stat filename (to see the file details like access time, modify 	time, change time)

	touch filename (to create empty file)

	touch file1 file2 (to create multiple file)

	touch -a filename (to change the access time only)

	touch -m filename (to change the modify time only)
________________________________________________________________________________________________________
--------------------------------------------------------------------------------------------------------

Vi editor =====>>
__________________________________________________________________________________________________
	1. A programmer teext editor
	2. used to edit any kind of plain text.

	vi filename (to open the editor)
	enter "i" to insert the content
	enter "esc" to come out of insert mode
	then type ":wq" to save and quit.

	:w to save the file
	:q to quit the file
	:q! force quit no save
________________________________________________________________________________________________________
--------------------------------------------------------------------------------------------------------

Nano ======>>
__________________________________________________________________________________________________
	nano filename (to create the file editor)
	ctrl+x and then Y to save the file and then enter to close 	editor
	Ctrl+o to overwrite the new data in existing file and then 	cntr+x to save the file.
	
________________________________________________________________________________________________________
--------------------------------------------------------------------------------------------------------

mkdir ======>>
__________________________________________________________________________________________________	
	mkdir dirName (to make the directory)
	mkdir dir1/dir2/dir3 (make directory within directory)
	Note*** "/" in between is seperation but at begining or end it 	is root
________________________________________________________________________________________________________
-------------------------------------------------------------------------------------------------------	

cd =======>>
__________________________________________________________________________________________________
	cd dirname (it take inside this directory)

pwd ======>>
__________________________________________________________________________________________________
	it print working directory

Hidden file creation =======>>
__________________________________________________________________________________________________
	touch .filename

Hidden directory creation =======>>
__________________________________________________________________________________________________
	mkdir .dirname

Copy file ========>>
__________________________________________________________________________________________________
	cp file1(source) file2(destination)

cut and paste =====>>
__________________________________________________________________________________________________
	mv file1 dir1

Rename file =======>>
__________________________________________________________________________________________________
	mv oldname newname

Remove directory =======>>
__________________________________________________________________________________________________
	rmdir dirname (remove specific directory)
	rmdir -p dir1/dir2 (remove both parent asnd child directory)
	rmdir -pv (remove all parent and subdirectory along with 	verrox)
	rm -rf (remove non-empty file and dir too)
	rm -rp (remove non-empty dir including parent and subdir)
	rm -r (remove empty dir)
________________________________________________________________________________________________________
--------------------------------------------------------------------------------------------------------

Hostname ======>>
__________________________________________________________________________________________________
	hostname (to get the host name)

Ip Address ====>>
__________________________________________________________________________________________________
	ifconfig (to get the ip address of the system)
	hostnamne -i (to get the ip address of the system)

OS Version and details =====>>
__________________________________________________________________________________________________
	cat /etc/os-release OR cat /etc/os-*

Yellowdog updater modified (yum) ======>>
__________________________________________________________________________________________________
	yum install httpd (start apache server)
	yum remove httpd
	yum update httpd  **** yum can be replaced with apt in ubuntu.

Service ========>>
__________________________________________________________________________________________________
	Service httpd start
	service httpd status

chkconfig =======>>
__________________________________________________________________________________________________
	chkconfig httpd on (on/off the service)
	chkconfig httpd off
________________________________________________________________________________________________________
--------------------------------------------------------------------------------------------------------

which >>>> to check whether software/package installed or not
whoami >>>> to check who am i
echo "" >>>>>> anything between inverted commas will print on screen.
echo "welcom" > filename >>>> it will add this content into the file.
grep root /etc/extra >>>>> it will search the root in side the given location
sort >>>>>> to arrange the file in alphabetical order
less >>>>>>
more >>>>>>
head >>>>>>
tail >>>>>>
________________________________________________________________________________________________________
--------------------------------------------------------------------------------------------------------

useradd ====>>
__________________________________________________________________________________________________
	to create new user
	cat /etc/passwd --- to see the user created.

groupadd =====>>
__________________________________________________________________________________________________
	to create new group ----  groupadd -f HA
	cat /etc/group ---- to see the group created.

gpasswd -a ======>>
__________________________________________________________________________________________________
	gpasswd -a username groupname ----- to add the user in a group.
	use -M to add multiple users --- user1, user2,user3..... 	groupname.

link creation ======>>
__________________________________________________________________________________________________
	ln -s file1 softfile1 ---- to create softlink (shortcut) of the file.
	ln file1 hardlink ----- to create the hardlink (backup) of the 	file

tar ========>>
	tar -cvf dir.tar dir1 ---- convert dir1 into dir.tar tar file
gzip ======>>
	gzip dir.tar ------ to zip the file/tar file.
gunzip =====>> 
	gunzip dir.tar.gz ------ to unzip the zipped file.
tar -xvf ====>>
	tar -xvf dir.tar ----- to extract the directory.

wget =====>>
	wget <url> ---- it download the files withoit iuser 	interaction.
________________________________________________________________________________________________________
--------------------------------------------------------------------------------------------------------

drwxr_xr_ _ 1 root root  ==========>>
__________________________________________________________________________________________________
	1st place represent file type
				d --- directory
				_ --- file
				l --- link
	2nd 3rd and 4th represent owner/root user
				w --- write
				r --- read
				x --- execute
	5th 6th and 7th represent group 
	8th 9th and 10th represent others
	number at 11th place represent symboloc link
	word at 12th place represent owner
	word at 13th place represent groupS

chmod =======>>
__________________________________________________________________________________________________
	r = 4, w = 2, x = 1
	chmod 777 filename --- rwx means 7

	u = user/root, g = group, o = others
	+ to add , - to remove and = to set
	u - r means read is removed from user
	g + w means write is added to group
	o = rwx is set to others
	chmod u=r,g=rwx,o=wx filename
	chmod u+wx,g+rx,o+rw Harsh

chown =====>>
	chown ownername filename	

chgrp ======>> 
	chgrp grpname filename
________________________________________________________________________________________________________
--------------------------------------------------------------------------------------------------------
Extra Commands =======>>
__________________________________________________________________________________________________
	ls -ltr === to list down the files with all properties
	free === to check available memory
	nproc === to check number of CPUs
	df -h === to check disk size
	top === to get the all info togather
	man "any command" === it give the details about this command
	trap ===>> use to trap or disable certail commmand
	uname ===>> to print system information
	ssh ===>> to login remote ----> ssh -i demokey.pem ubuntu@ipAddress
	bash ===>> bash file.sh ==>> to execute shell file
	wc -w filename ===>> number of word count ==>> n filename
	wc -w < filename ==>> give number of words only
	echo hello guys > hello.txt ===> overwrite the cotent inside the file
	echo good morning >> hello.txt ===> to append text inside the same file
________________________________________________________________________________________________________
--------------------------------------------------------------------------------------------------------
	cat << EOF
	> hello
	> guys
	> how are you
	> doing
	> EOF
		oUTPUT ==>>	hello
				guys
				how are you
				doing
________________________________________________________________________________________________________
--------------------------------------------------------------------------------------------------------
TEST =====>>
__________________________________________________________________________________________________
	[ hello = hello ]
	echo $? ===> 0 as both both hello are same
	[ 1 -eq 1 ] OR [ 1 = 1 ]
	echo $? ===> 0
	
________________________________________________________________________________________________________
--------------------------------------------------------------------------------------------------------
SHELL Scripting =======>>>
__________________________________________________________________________________________________
	#!/bin/bash ====>> shebang/hashbang
		>> "#!/bin/bash" tells the system to use the bash shell (Bourne Again Shell) to interpret and 		   run the commands within the script.
		>> By explicitly mentioning the interpreter, the script becomes more portable across 			   different systems. Even if the system has a different default shell, the shebang ensures 		   that the correct interpreter is used, allowing the script to run consistently.

create a shell file shell-script.sh which contains following instructions =====>
	#!/bin/bash

	#create a folder
	mkdir baghel
	
	#create two files
	cd baghel
	touch bg1 bg2 

	these instructions to create one directory named baghel anfd two files bg1 bg2 inside this folder.

set x- ===>> debug mode (it will print the each command before printing the result)
set -e ===>> exit the script if there is an any error
set -o ===>> pipefail when set -e not able to identify error with pipe (ex. hshssb | echo)
ps -ef ===>> list down the running processes
| ===>> pipe command ==> used between two commands and transfer the result of first command to second command
	"|" command will not work with "date" as it send output to stdin instead of stdout

 grep employee harshu | awk -F" " '{print $5}' ===>> to print the value of specific column from the line
________________________________________________________________________________________________________
--------------------------------------------------------------------------------------------------------

if/else syntax ===>> 
__________________________________________________________________________________________________
	a=4
	b=10
	
	if [ $a > $b ]
	then
	        echo "a is greater than b"
	else
	        echo "b is greater than a"
	fi
	---------------------------------------------------------------
	#!/bin/bash
	
	#divisible by 3, by 5 but not 3*5=15
	for i in {1..100}; do
	        if ([ `expr $i  % 3` == 0 ] || [ `expr $i  % 	5` == 0 ]) && [ `expr $i % 15` != 0 ];
	then
	        echo $i
	fi;
	done
	----------------------------------------------------------------
	#!/bin/bash

	if [ ${1,,} = baghel ]; then
	        echo "hi boss you are welcome"
	elif [ ${1,,} = help ]; then
	        echo "please enter your correct name"
	else
	        echo "i don't know eho you are"
	fi
	--------------------------------------------------------------------
	to print the number of s in mississipi word 
		#!/bin/bash
		x=mississipi
		grep -o "s" <<<"$x" | wc -l
________________________________________________________________________________________________________
--------------------------------------------------------------------------------------------------------

CASE syntax =====>
_______________________________________________________________________________________________________
	#!/bin/bash
	
	case ${1,,} in
	        Harsh | admin)
	                echo "Hello, you are the boss"
	                ;;
	        help)
	                echo "just enter your name"
	                ;;
	        *)
	                echo "Hello there. You are not the boss"
	esac
________________________________________________________________________________________________________
--------------------------------------------------------------------------------------------------------

LIST/ARRAY ===>>
_________________________________________________________________________________________________________
FIRST_LIST=p(1 2 3 4 5) 
	echo $FIRST_LIST ===> 1
	echo ${FIRST_LIST[@]} ===>> 1 2 3 4 5
	echo ${FIRST_LIST[2]} ===>> 3
________________________________________________________________________________________________________
--------------------------------------------------------------------------------------------------------
FOR Loop ==> 
________________________________________________________________________________________________________
 for item in ${MY_FIRST_LIST[@]}; do echo -n $item | wc -c; done
________________________________________________________________________________________________________
--------------------------------------------------------------------------------------------------------

Function ===>
_______________________________________________________________________________________________________
#!/bin/bash
	up="before"
	since="function"
	echo $up
	echo $since
	showtime(){
	        up=$(uptime -p | cut -c4-)
	        since=$(uptime -s)
	        cat << EOF
	---
	This machine has been up for ${up}
	it has been running since ${since}
	---
	EOF
	}
	showtime
	echo $up
	echo $since
	OUTPUT ===>  	---
			This machine has been up for 1 hour, 58 minutes
			it has been running since 2024-05-12 12:50:10
			---

	#!/bin/bash

	showmyname(){
	        echo $1
	}
	showmyname Harsh
	OUTPUT ===> Harsh

	#!/bin/bash

	showmyname(){
	        echo hello $1
	        if [ ${1,,} = Harsh]; then
	                return 0
	        else
	                return 1
	        fi
	}
	showmyname $1
	if [ $? = 1 ]; then
	        echo "someone unknown is there"
	fi
________________________________________________________________________________________________________
--------------------------------------------------------------------------------------------------------

AWK ===>>
_______________________________________________________________________________________________________
	 awk "{print $2}" awktest.txt ==>> print second word 
	echo "print this word: HEllo" | awk '{print $4}' ===>> HEllo
	echo "print this word: HEllo" | awk -F: '{print $2}' | cut -c2 ==>> H
_______________________________________________________________________________________________________
--------------------------------------------------------------------------------------------------------

SED ===>> to modify/replace the words in file
_______________________________________________________________________________________________________
	sed 's/three/four/g' sedtest.txt ===>> three replaced by four in sedtest.txt
	sed -i.ORIGINAL 's/three/four/g' sedtest.txt ===>> to creat backup of original file

________________________________________________________________________________________________________
--------------------------------------------------------------------------------------------------------
crontab ===> to set something to send automatically at certain time daily report
vim -r filename ===>> to open the file at read only mode
________________________________________________________________________________________________________
--------------------------------------------------------------------------------------------------------
VARIABLES ======>>>
__________________________________________________________________________________________________
	FIRST_NAME=Harsh ====>> echo hell $FIRST_NAME ===>> hello Harsh
	interactive shell ===>>

		echo what is your first name
		read FIRST_NAME
		echo What is your last name
		read LAST_NAME

		echo hello $FIRST_NAME $LAST_NAME
________________________________________________________________________________________________________
--------------------------------------------------------------------------------------------------------
Softlink vs hardlink ===>> point to same object vs point to copy of that object

traceroute ==>> network debugging, to get number of hops between your system and website with request travel time
